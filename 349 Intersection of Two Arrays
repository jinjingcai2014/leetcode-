/*Given two arrays, write a function to compute their intersection.

Example:
Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].

Note:
Each element in the result must be unique.
The result can be in any order.
Subscribe to see which companies asked this question*/


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _349_Intersection_of_Two_Arrays
{
    public class Solution
    {//
        /// <summary>
        /// 通过hashset集合来去除nums2和nums1中的多余相同的元素
        /// </summary>
        /// <param name="nums1"></param>
        /// <param name="nums2"></param>
        /// <returns></returns>
        public int[] Intersection(int[] nums1, int[] nums2)
        {
            
            int num = Math.Min(nums1.Length, nums2.Length);
            int[] temp = new int[num];
            HashSet<int> commonNum = new HashSet<int>();
            int count = 0;
            for (int i = 0; i < nums1.Length; i++)
            {
                for (int j = 0; j < nums2.Length; j++)
                {
                    if (nums1[i].Equals(nums2[j]))
                    {
                        commonNum.Add(nums1[i]);
                    }
                }
            }
            temp = commonNum.ToArray();
            return temp;
        }
    }
}
